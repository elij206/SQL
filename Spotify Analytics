#For this project, I downloaded Spotify data from Kaggle, created a table for the data, inserted the Spotify data into said table, and then performed analytics on the dataset using SQL.

#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL);

#I inserted the Spotify Data (.csv) into the table and explored the data using the following SQL:

#What is the average danceability by artist?
SELECT artist_name, AVG(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(danceability) desc;

#Who are the top 10 artists by popularity?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

#Which artist released the longest song?
SELECT artist_name
FROM BIT_DB.Spotifydata
ORDER BY duration_ms desc
LIMIT 1;

#Calculate the average popularity for the artists in the Spotify data table using a CTE.
#Then, tag every artist with an average popularity of 90 or above as a “Top Star”.
#Lastly, display these artists' names, thier popularity, and their tag.
WITH popularity_avg_CTE AS (
SELECT artist_name, AVG(popularity) as average_popularity
FROM Spotifydata
GROUP BY artist_name)

SELECT *,
CASE WHEN average_popularity >= 90 THEN "Top Star"
ELSE ""
END AS tag
FROM popularity_avg_CTE
WHERE average_popularity >=90;
