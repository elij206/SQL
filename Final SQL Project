#In this project, I query a digital media store's database that contains multiple tables quantifying statistics about customer, invoice, employee, and product data.

#1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
SELECT FirstName, LastName, CustomerId, Country
FROM chinook.customers
WHERE Country <> "USA";

#2. Show only the Customers from Brazil.
SELECT *
FROM chinook.customers
WHERE Country = "Brazil";

#3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
FROM customers
LEFT JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE customers.Country = "Brazil";

#4. Show the Employees who are Sales Agents.
SELECT *
FROM chinook.employees
WHERE Title = "Sales Support Agent";

#5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT distinct BillingCountry
FROM chinook.invoices;

#6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT invoices.InvoiceId, employees.FirstName, employees.LastName
FROM chinook.invoices
LEFT JOIN chinook.customers
ON invoices.CustomerId = customers.CustomerId
LEFT JOIN chinook.employees
ON customers.SupportRepId = employees.EmployeeId
ORDER BY employees.FirstName;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT invoices.Total, customers.FirstName AS cust_FirstName, customers.LastName AS cust_LastName, customers.Country, employees.FirstName AS rep_FirstName, employees.LastName AS rep_LastName
FROM chinook.customers
LEFT OUTER JOIN chinook.invoices
ON customers.CustomerId = invoices.CustomerId
LEFT OUTER JOIN chinook.employees
ON employees.EmployeeId = customers.SupportRepId;

#8. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM chinook.invoices
WHERE InvoiceDate LIKE "2009-%";

#9. What are the total sales for 2009?
SELECT SUM(Total)
FROM chinook.invoices
WHERE InvoiceDate LIKE "2009-%";

#10. Write a query that includes the purchased track name with each invoice line ID.
SELECT items.InvoiceLineId, tracks.Name AS track_name
FROM chinook.invoice_items items
LEFT JOIN chinook.tracks
ON items.TrackId = tracks.TrackId
ORDER BY items.InvoiceLineId;

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT items.InvoiceLineId, tracks.Name AS track_name, artists.Name AS artist_name
FROM chinook.invoice_items items
LEFT JOIN chinook.tracks
ON items.TrackId = tracks.TrackId
LEFT JOIN chinook.albums
ON tracks.AlbumId = albums.AlbumId
LEFT JOIN chinook.artists
ON albums.ArtistId = artists.ArtistId;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name AS track_name, albums.Title AS album_title, media.Name AS media_type, genres.Name AS genre
FROM chinook.tracks
LEFT JOIN chinook.albums ON tracks.AlbumId = albums.AlbumId
LEFT JOIN chinook.media_types media ON tracks.MediaTypeId = media.MediaTypeId
LEFT JOIN chinook.genres ON tracks.GenreId = genres.GenreId;

#13. Show the total sales made by each sales agent.
SELECT employees.FirstName, employees.LastName, ROUND(SUM(invoices.Total), 2) AS 'Total Sales'
FROM chinook.employees
JOIN chinook.customers
ON employees.EmployeeId = customers.SupportRepId
JOIN chinook.invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent'
GROUP BY employees.EmployeeId;

#14. Which sales agent made the most dollars in sales in 2009?
SELECT employees.FirstName, employees.LastName
FROM chinook.employees
JOIN chinook.customers
ON employees.EmployeeId = customers.SupportRepId
JOIN chinook.invoices
ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent'
AND invoices.InvoiceDate LIKE "2009-%"
GROUP BY employees.EmployeeId
ORDER BY SUM(invoices.Total) desc
LIMIT 1;
